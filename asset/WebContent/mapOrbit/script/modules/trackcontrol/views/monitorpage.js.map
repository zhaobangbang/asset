{"version":3,"sources":["/script/modules/trackcontrol/views/monitorpage.js"],"names":[],"mappings":"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","file":"/script/modules/trackcontrol/views/monitorpage.js","sourcesContent":["/**\r\n * @file 轨迹监控页码翻页部分 Reflux View\r\n * @author 崔健 cuijian03@baidu.com 2016.08.24\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport { render } from 'react-dom'\r\nimport TrackAction from '../actions/trackAction'\r\nimport TrackStore from '../stores/trackStore'\r\n\r\nvar Monitorpage = React.createClass({\r\n    getInitialState: function() {\r\n        return {\r\n            // 当前页码\r\n            currentPage: 1,\r\n            // 输入框中的页码\r\n            inputPage: 1,\r\n            // 总页码\r\n            totalPage: 0,\r\n            // 上一页按钮的样式，分为lasepageon&lastPageOff两种\r\n            lastPage: 'lastPageOff',\r\n            // 下一页按钮的样式，分为nextPageOn&nextPageOff两种\r\n            nextPage: 'nextPageOff',\r\n            // 翻页状态，当正在翻页过程中，翻页按钮不可点\r\n            cliking: 0\r\n        }\r\n    },\r\n    componentDidMount: function () {\r\n        TrackStore.listen(this.onStatusChange);\r\n    }, \r\n    onStatusChange: function (type,data) {\r\n        switch (type){\r\n            case 'totalpage':\r\n                this.listenTotalpage(data);\r\n            break;\r\n            case 'listcomplete':\r\n                this.listenListcomplete();\r\n            break;\r\n        }\r\n    },\r\n    /**\r\n     * 响应Store totalpage事件，设置总数量量\r\n     *\r\n     * @param {data} 总页数\r\n     */\r\n    listenTotalpage: function(data) {\r\n        this.setState({totalPage:data});\r\n        this.setSwichPageStyle(this.state.currentPage);\r\n    },\r\n    /**\r\n     * 响应Store listcomplete事件，开启翻页按钮可点\r\n     *\r\n     */\r\n    listenListcomplete: function() {\r\n        this.setState({cliking: 0});\r\n    },\r\n    /**\r\n     * DOM操作回调，页码输入value变化\r\n     *\r\n     * @param {object} event 事件对象 \r\n     */\r\n    handleChange: function (event) {\r\n        this.setState({inputPage:parseInt(event.target.value)});\r\n    },\r\n    /**\r\n     * DOM操作回调，点击跳转页面按钮\r\n     *\r\n     * @param {object} event 事件对象 \r\n     */\r\n    handleJumppage: function (event) {\r\n        var jumpPage = this.state.inputPage;\r\n        this.setState({currentPage: jumpPage});\r\n        TrackAction.list(jumpPage);\r\n    },\r\n    /**\r\n     * DOM操作回调，点击上一页\r\n     *\r\n     * @param {object} event 事件对象 \r\n     */\r\n    handleLastpage: function (event) {\r\n        if(this.state.currentPage === 1 || this.state.cliking === 1) {\r\n            return;\r\n        } else {\r\n            var lastPage = this.state.currentPage - 1;\r\n            this.setState({currentPage: lastPage});\r\n            this.setState({inputPage: lastPage});\r\n            TrackAction.list(lastPage);\r\n            this.setState({cliking: 1});\r\n        }\r\n    },\r\n    /**\r\n     * DOM操作回调，点击下一页\r\n     *\r\n     * @param {object} event 事件对象 \r\n     */\r\n    handleNextpage: function (event) {\r\n        if(this.state.currentPage === this.state.totalPage || this.state.cliking === 1) {\r\n            return;\r\n        } else {\r\n            var nextPage = this.state.currentPage + 1;\r\n            this.setState({currentPage: nextPage});\r\n            this.setState({inputPage: nextPage});\r\n            TrackAction.list(nextPage);\r\n            this.setState({cliking: 1});\r\n        }\r\n    },\r\n    /**\r\n     * view内部，设置翻页按钮样式\r\n     *\r\n     * @param {number} jumpPage 要跳转到的页 \r\n     */\r\n    setSwichPageStyle: function (jumpPage) {\r\n        if(jumpPage === 1) {\r\n            this.setState({lastPage: 'lastPageOff'});\r\n        } else {\r\n            this.setState({lastPage: 'lastPageOn'});\r\n        }\r\n        if(jumpPage === this.state.totalPage) {\r\n            this.setState({nextPage: 'nextPageOff'});\r\n        } else {\r\n            this.setState({nextPage: 'nextPageOn'});\r\n        }\r\n        this.setState({currentPage: jumpPage});\r\n    },\r\n    render: function () {\r\n        var currentPage = this.state.currentPage;\r\n        var totalPage = this.state.totalPage;\r\n        var lastPage = this.state.lastPage;\r\n        var nextPage = this.state.nextPage;\r\n        var inputPage = this.state.inputPage;\r\n        return (\r\n            <div className=\"monitorPage\">\r\n                <div className=\"jumpPage\">\r\n                    <input type=\"number\" className=\"inputPage\" value={inputPage} onChange={this.handleChange} min=\"0\" max={totalPage} />\r\n                    <span className=\"pageNumber\">/{'    ' + totalPage}页</span>\r\n                    <span className=\"goPage\" onClick={this.handleJumppage}>GO</span>\r\n                </div>\r\n                <div className=\"switchPage\">\r\n                    <span className={lastPage} onClick={this.handleLastpage}></span>\r\n                    <span className={nextPage} onClick={this.handleNextpage}></span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n});\r\n\r\nexport default Monitorpage;\r\n"]}
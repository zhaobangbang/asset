{"version":3,"sources":["/script/modules/entitycontrol/stores/entityStore.js"],"names":[],"mappings":"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","file":"/script/modules/entitycontrol/stores/entityStore.js","sourcesContent":["/* globals Reflux */\r\n/* eslint-disable fecs-camelcase */\r\n/**\r\n * @file 设备管理台Reflux Store\r\n * @author 崔健 cuijian03@baidu.com 2016.08.20\r\n */\r\n\r\nimport EntityAction from '../actions/entityAction'\r\nimport Urls from '../../../common/urls'\r\nimport Commonfun from '../../../common/commonfun'\r\n\r\nvar EntityStore = Reflux.createStore({\r\n    listenables: [EntityAction],\r\n    init: function() {\r\n    },\r\n    data: {\r\n        // 总entity数据数量\r\n        total: 0,\r\n        // 当前页entity数据数量\r\n        size: 0,\r\n        // entity完整数据\r\n        entities: [],\r\n        // entity的固定默认列名\r\n        column: ['名称', '描述', '创建时间', '最后位置', '最后定位时间'],\r\n        // entity的自定义列的key\r\n        column_key: [],\r\n        // entity的自定义列的desc\r\n        indiviColumn: [],\r\n        // entity list计数器，entity全部trigger完成后判断触发listcomplete时间\r\n        sizeCount: 0,\r\n        // 目前选中的entity，记录checklist主要是为了删除\r\n        checklist: [],\r\n        // 当前数据页\r\n        currentPage: 1,\r\n        // 删除entity计数，都删除后触发removecomplete\r\n        removeCount: 0,\r\n        // 当前检索关键字\r\n        searchQuery: '',\r\n        providerArr: [\r\n            {\r\n                key: 21,\r\n                value: '深圳微科通讯'\r\n            },\r\n            {\r\n                key: 24,\r\n                value: '深圳博实结科技'\r\n            },\r\n            {\r\n                key: 25,\r\n                value: '深圳成为智能交通'\r\n            },\r\n            {\r\n                key: 22,\r\n                value: '北京聚利科技'\r\n            }\r\n        ]\r\n    },\r\n    /**\r\n     * store内部，根据view需要的格式处理entities，因为后端返回的定位点\r\n     * 为经纬度，所以需要再次循环调用经纬度解析方法\r\n     *\r\n     * @param {object} data 后端返回的entity原始数据\r\n     */\r\n    setEntities: function(data) {\r\n        var that = this;\r\n        that.data.total = data.total;\r\n        that.data.size = data.size;\r\n        data.entities.map(function(item) {\r\n            var point = item.latest_location;\r\n            var paramsGeo = {\r\n                location: point.latitude + ',' + point.longitude,\r\n                output: 'json'\r\n            };\r\n            Urls.jsonp(Urls.getAddress, paramsGeo, function(dataGeo) {\r\n                var temp = [];\r\n                that.data.column_key.map(function(keyitem, index) {\r\n                    temp[index]= item[keyitem] !== undefined ? [keyitem, item[keyitem]] : [keyitem, '无'];\r\n                    if (keyitem === '_provider') {\r\n                        that.data.providerArr.map(function(itemin) {\r\n                            if(itemin.key + '' === temp[index][1]) {\r\n                                temp[index] = ['_provider',  itemin.value];\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                that.data.entities.push([\r\n                    ['entity_name', item.entity_name],\r\n                    ['entity_desc', item.entity_desc ? item.entity_desc : '无'],\r\n                    ['create_time', item.create_time],\r\n                    ['local_address', dataGeo.result.formatted_address === '' ? '无' : dataGeo.result.formatted_address,],\r\n                    ['loc_time', Commonfun.getLocalTime(item.latest_location.loc_time)]\r\n                ].concat(temp));\r\n                if (that.data.entities.length === that.data.size) {\r\n                    that.trigger('list', that.getEntities());\r\n                    that.trigger('listcomplete', that.data.size);\r\n                }\r\n            });\r\n        });\r\n    },\r\n    /**\r\n     * store内部，获取entities\r\n     *\r\n     * @return {object} 当前entities\r\n     */\r\n    getEntities: function() {\r\n        return this.data.entities;\r\n    },\r\n    /**\r\n     * 响应Action list，加载entity list\r\n     *\r\n     * @param {number} pageindex 页码\r\n     */\r\n    onList: function(pageindex) {\r\n        var that = this;\r\n        that.data.currentPage = pageindex;\r\n        that.data.entities = [];\r\n        var params = {\r\n            'page_index': pageindex,\r\n            'query': that.data.searchQuery,\r\n            'page_size': 15\r\n        };\r\n        Urls.jsonp(Urls.searchEntity, params, function(data) {\r\n            if (data.status === 0) {\r\n                that.setEntities(data);\r\n                this.trigger('total', that.data.total);\r\n                this.trigger('totalpage', Math.ceil(that.data.total / 15));\r\n            } else {\r\n                this.trigger('list', []);\r\n                this.trigger('listcomplete', 0);\r\n                this.trigger('total', 0);\r\n                this.trigger('totalpage', 0);\r\n                this.trigger('initpage');\r\n            }\r\n        }.bind(this));\r\n    },\r\n\r\n    /**\r\n     * store内部 将自定义字段中的provider字段提到最前\r\n     *\r\n     * @param {array} column 自定义字段\r\n     * @return {array} 新的数组\r\n     */\r\n    formatColumn: function(columns) {\r\n        var providerIndex = columns.findIndex(function(value, index, array) {\r\n            return value.column_key === '_provider';\r\n        });\r\n        if (providerIndex != -1) {\r\n            var provider = columns.find(function(value, index, array) {\r\n                return value.column_key === '_provider';\r\n            });\r\n            columns.splice(providerIndex, 1);\r\n            columns.unshift(provider);\r\n        }\r\n        return columns;\r\n    },\r\n    /**\r\n     * 响应Action listcolumn，查询当前service_id的自定义字段\r\n     *\r\n     */\r\n    onListcolumn: function() {\r\n        var that = this;\r\n        var params = {\r\n        };\r\n        Urls.jsonp(Urls.columnsList, params, function(data) {\r\n            if (data.status === 0) {\r\n                data.columns = that.formatColumn(data.columns);\r\n                data.columns.map(function(item) {\r\n                    that.data.column.push(item.column_desc !== null ? item.column_desc : item.column_key);\r\n                    that.data.column_key.push(item.column_key);\r\n                    if (item.column_key !== '_provider') {\r\n                        that.data.indiviColumn.push({\r\n                            'column_key': item.column_key,\r\n                            'column_desc': item.column_desc !== null ? item.column_desc : item.column_key\r\n                        });\r\n                    }\r\n                });\r\n                this.trigger('indivicolumn', that.data.indiviColumn);\r\n                this.trigger('listcolumn', that.data.column);\r\n            }\r\n\r\n        }.bind(this));\r\n    },\r\n    /**\r\n     * 响应Action checkall，触发checkall事件\r\n     *\r\n     */\r\n    onCheckall: function() {\r\n        this.trigger('checkall');\r\n    },\r\n    /**\r\n     * 响应Action uncheckall，触发uncheckall事件\r\n     *\r\n     */\r\n    onUncheckall: function() {\r\n        this.trigger('uncheckall');\r\n    },\r\n    /**\r\n     * 响应Action updatecheck，更新checklist\r\n     *\r\n     * @param {array} data 当前选中entity项\r\n     */\r\n    onUpdatecheck: function(data) {\r\n        this.data.checklist = data;\r\n    },\r\n    /**\r\n     * 响应Action remove\r\n     *\r\n     */\r\n    onRemove: function() {\r\n        console.warn('此处需要自行通过代理服务器实现POST请求！');\r\n        // var that = this;\r\n        // var removeList = that.data.checklist;\r\n        // removeList.map(function(item) {\r\n        //     var params = {\r\n        //         'entity_name': item\r\n        //     };\r\n        //     Urls.post(Urls.deleteEntity, params, function(data) {\r\n        //         if (data.status === 0) {\r\n        //             if (++that.data.removeCount === removeList.length) {\r\n        //                 that.data.currentPage = (that.data.size === removeList.length) ? that.data.currentPage - 1 : that.data.currentPage;\r\n        //                 that.onList(that.data.currentPage);\r\n        //                 that.data.removeCount = 0;\r\n        //                 that.trigger('removecomplete');\r\n        //             }\r\n        //         }\r\n\r\n        //     }.bind(this));\r\n        // });\r\n\r\n    },\r\n\r\n    /**\r\n     * 响应Action setsearchentity\r\n     * @param {string} data 新的setsearchentity\r\n     *\r\n     */\r\n    setsearchentity: function(data) {\r\n        this.data.searchQuery = data;\r\n    },\r\n    /**\r\n     * 响应Action initpageset，选中某个轨迹\r\n     *\r\n     */\r\n    onInitpageset: function() {\r\n        this.data.currentPage =  0;\r\n        this.data.checklist = [];\r\n        this.trigger('initpage');\r\n    },\r\n    /**\r\n     * 响应Action update，更新entity属性\r\n     * @param {object} data 更新的entity和属性\r\n     */\r\n    onUpdate: function(data) {\r\n        console.warn('此处需要自行通过代理服务器实现POST请求！');\r\n        // Urls.post(Urls.updateEntity, data, function(data) {\r\n        //     if (data.status === 0) {\r\n        //     } else {\r\n        //         alert(data.message);\r\n        //     }\r\n\r\n        // }.bind(this));\r\n    }\r\n});\r\n\r\nexport default EntityStore"]}
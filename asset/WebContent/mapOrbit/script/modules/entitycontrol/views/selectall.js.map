{"version":3,"sources":["/script/modules/entitycontrol/views/selectall.js"],"names":[],"mappings":";;;;;;;;;;;;;;;qBAKiC,OAAO;;;;wBACjB,WAAW;;mCACT,yBAAyB;;;;iCAC1B,uBAAuB;;;;AAG/C,IAAI,SAAS,GAAG,mBAAM,WAAW,CAAC;;;AAC9B,mBAAe,EAAE,2BAAW;AACxB,eAAO,EACN;KACJ;AACD,qBAAiB,EAAE,6BAAY;AAC3B,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,uCAAY,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACxC,YAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;AACD,kBAAc,EAAE,wBAAU,IAAI,EAAC,IAAI,EAAE;AACjC,gBAAQ,IAAI;AACR,iBAAK,cAAc;AACf,oBAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,sBAAM;AAAA,SACT;KACJ;;;;;AAKD,sBAAkB,EAAE,8BAAW;AAC3B,SAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KACpC;;;;;AAKD,oBAAgB,EAAE,4BAAY;AAC1B,SAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;AAClB,yBAAa,EAAE,uBAAuB;AACtC,sBAAU,EAAE,eAAe;AAC3B,wBAAY,EAAE,KAAK;SACtB,CAAC,CAAC;AACH,SAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,UAAS,KAAK,EAAC;AAC1C,6CAAa,QAAQ,EAAE,CAAC;SAC3B,CAAC,CAAC;AACH,SAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,aAAa,EAAE,UAAS,KAAK,EAAC;AAC5C,6CAAa,UAAU,EAAE,CAAC;SAC7B,CAAC,CAAC;KACN;AACD,UAAM,EAAE,kBAAY;AAChB,eACI;;cAAK,SAAS,EAAC,WAAW;YACtB;;;gBACI,4CAAO,IAAI,EAAC,UAAU,EAAC,EAAE,EAAC,UAAU,GAAE;gBACtC;;sBAAM,SAAS,EAAC,UAAU;;iBAAU;aAChC;SACN,CACT;KACJ;CACJ,CAAC,CAAC;;qBAEY,SAAS","file":"/script/modules/entitycontrol/views/selectall.js","sourcesContent":["/**\r\n * @file 全选当前页entity Reflux View\r\n * @author 崔健 cuijian03@baidu.com 2016.08.20\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport { render } from 'react-dom'\r\nimport EntityAction from '../actions/entityAction'\r\nimport EntityStore from '../stores/entityStore'\r\n\r\n\r\nvar Selectall = React.createClass({\r\n    getInitialState: function() {\r\n        return {\r\n        }\r\n    },\r\n    componentDidMount: function () {\r\n        var self = this;\r\n        EntityStore.listen(self.onStatusChange);\r\n        this.setCheckboxStyle();\r\n    }, \r\n    onStatusChange: function (type,data) {\r\n        switch (type){\r\n            case 'listcomplete':\r\n                this.listenListcomplete();\r\n            break;\r\n        }\r\n    },\r\n    /**\r\n     * 响应Store listcomplete事件，取消所有checkbox选中状态\r\n     *\r\n     */\r\n    listenListcomplete: function() {\r\n        $('#checkAll').iCheck('uncheck');\r\n    },\r\n    /**\r\n     * view内部，初始化checkbox样式，添加监听\r\n     *\r\n     */\r\n    setCheckboxStyle: function () {\r\n        $('#checkAll').iCheck({\r\n            checkboxClass: 'icheckbox_square-blue',\r\n            radioClass: 'iradio_square',\r\n            increaseArea: '20%' // optional\r\n        });\r\n        $('#checkAll').on('ifChecked', function(event){\r\n            EntityAction.checkall();\r\n        });\r\n        $('#checkAll').on('ifUnchecked', function(event){\r\n            EntityAction.uncheckall();\r\n        });\r\n    },\r\n    render: function () {\r\n        return (\r\n            <div className=\"selectAll\">\r\n                <label>\r\n                    <input type=\"checkbox\" id=\"checkAll\"/>\r\n                    <span className=\"allCheck\">全选</span>\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n});\r\n\r\nexport default Selectall;\r\n"]}